/*
 *  Copyright 2012 The original authors
 *
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

apply from: 'gradle/extras.gradle'
apply plugin: 'java'

// Hack for coping with STS/Eclipse Gradle plugin selecting a JRE
def javaHome = System.getenv('JAVA_HOME') ?: System.getProperty('java.home')
if (javaHome.endsWith('/jre')) javaHome = javaHome.replaceAll('/jre$', '')

repositories {
    flatDir {
        dirs file("$javaHome/lib")
    }
}

defaultTasks = ['assemble']

sourceCompatibility = '1.6'
targetCompatibility = '1.6'

dependencies {
    compile files("$javaHome/lib/tools.jar")
}

jar {
    version = ''
    manifest {
        attributes(
            'Main-Class': 'jmx.Stethoscope'
        )
    }
}

task prepare(type: Copy, dependsOn: ['build']) {
    into "build/$rootProject.name-$version"
    from jar
    from 'src/scripts'
}

task dist(type: Tar, dependsOn: ['prepare']) {
    description 'Create the distribution'
    
    compression = org.gradle.api.tasks.bundling.Compression.GZIP
    destinationDir file('build/distributions')
    inputs.files files("build/$rootProject.name-$version")
    outputs.dir destinationDir
    baseName = rootProject.name
    version = rootProject.version
    extension = 'tar.gz'
    from 'build'
    include "$rootProject.name-$version/**"
    
    doLast {
        project.ant.chmod(file: "build/$rootProject.name-$version/scope", perm: 'ugo+x')
    }
}